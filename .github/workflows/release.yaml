name: goreleaser

on:
  push:
    tags:
      - '*'
    branches: [ master ]

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
#      - name: Run GoReleaser
#        uses: goreleaser/goreleaser-action@v2
#        with:
#          # either 'goreleaser' (default) or 'goreleaser-pro'
#          distribution: goreleaser
#          version: latest
#          args: release --rm-dist
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=ghcr.io/tianniu-rd/grafana-proxy
          DOCKER_PLATFORMS=linux/amd64,linux/arm64
          VERSION=canary
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          TAGS="--tag ${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
            --build-arg revision=$(git rev-parse --short HEAD) \
            ${TAGS} .
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Docker Buildx (build)
        run: |
          docker buildx build --no-cache --pull --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}
      - name: Docker Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Build and push
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          file: ./Dockerfile
#          platforms: linux/amd64,linux/arm64
#          push: true
#          tags: |
#            ghcr.io/tianniu-rd/grafana-proxy:${{ steps.prepare.outputs.version }}
      - name: Docker Buildx (push)
        run: |
          docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}